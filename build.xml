<?xml version="1.0"?>
<project name="dotvimstat" default="compile">

	<property name="build.loc" location="${basedir}/build" />
	<property name="build.lib.loc" location="${build.loc}/lib" />
	<property name="build.number.loc" location="${build.loc}/build.number" />

	<!-- Default properties -->
	<property file="${build.loc}/build.properties" />

	<tstamp>
		<format property="today.formatted" pattern="yyyyMMdd" />
	</tstamp>

	<!-- Taskdefs -->
	<taskdef resource="flexTasks.tasks" classpath="${FLEX_HOME}/ant/lib/flexTasks.jar" />
	<taskdef resource="net/sf/antcontrib/antcontrib.properties" classpath="${basedir}/build/lib/ant-contrib-1.0b3.jar" />

	<!-- Targets -->
	<target name="clean" description="remove all files generated by the previous build">
		<delete dir="${target.loc}" />
	</target>

	<target name="initialize"
		description="initialize build state, sets properties and create directories"
		depends="initialize-build-number">

		<!-- Inform user -->
		<echo message="Project:       		${ant.project.name}" />
		<echo message="Hostname:      		${hostname}" />
		<echo message="Building with: 		${hostname}-build.properties" />
		<echo message="Java version:  		${java.version}" />
		<echo message="Flex SDK:      		${FLEX_HOME}" />
		<echo message="Flash Version: 		${flash.targetVersion}" />
		<echo message="Debug:         		${build.debug}" />
		<echo message="Locale:        		${build.locale}" />
		<echo message="Build Version: 		${build.version}" />
		<echo message="Build Number:  		${build.number}" />
		<echo message="TestRunner:    		${test.runner.app}" />

		<!-- Create Directories  -->
		<mkdir dir="${target.loc}" />
		<mkdir dir="${bin.loc}" />
		<mkdir dir="${doc.loc}" />
		<mkdir dir="${report.loc}" />
		<mkdir dir="${report.flexunit.loc}" />

	</target>

	<target name="initialize-build-number"
		description="initializes build.number from external or local source">

		<!-- Otherwise use the local build.number -->
		<propertyfile file="${build.number.loc}" comment="Movideo Admin build number">
			<entry value="1" key="build.number" default="0" type="int"
				operation="+" />
		</propertyfile>

		<property file="${build.number.loc}" />
	</target>

	<target name="process-sources"
		description="process the source code, filters compiler configuration"
		depends="initialize, process-sources-html-template, process-sources-flex-config">
	</target>

	<target name="process-sources-flex-config" description="processes the flex-config.xml templates"
		depends="initialize">

		<!-- Generate flex-config.xml for the application -->
		<copy file="${config.template}" toFile="${config.file}"
			overwrite="true" encoding="utf-8">

			<filterset>
				<filter value="${build.about}" token="ABOUT" />
				<filter value="${build.number}" token="BUILD_NUMBER" />
				<filter value="${today.formatted}" token="BUILD_DATE" />
				<filter value="${hostname}" token="CREATOR" />
				<filter value="${build.locale}" token="LOCALE" />
				<filter value="${build.name}" token="NAME" />
				<filter value="${build.version}" token="VERSION" />
				<filter value="${build.debug}" token="DEBUG" />
				<filter value="${src.loc}" token="SRC" />
			</filterset>
		</copy>

		<!-- Generate flex-config.xml for the testrunner -->
		<copy file="${test.config.template}" toFile="${test.config.file}"
			overwrite="true" encoding="utf-8">

			<filterset>
				<filter value="${build.about}" token="ABOUT" />
				<filter value="${build.number}" token="BUILD_NUMBER" />
				<filter value="${today.formatted}" token="BUILD_DATE" />
				<filter value="${hostname}" token="CREATOR" />
				<filter value="${build.locale}" token="LOCALE" />
				<filter value="${build.name}" token="NAME" />
				<filter value="${build.version}" token="VERSION" />
				<filter value="${build.debug}" token="DEBUG" />
				<filter value="${src.loc}" token="SRC" />
			</filterset>
		</copy>

	</target>

	<target name="process-sources-html-template"
		description="process the html-template html, javascript, and css files"
		depends="initialize">

		<copy todir="${html.loc}" overwrite="true">
			<fileset dir="${html.template.loc}">
				<include name="**/*.html"/>
				<include name="**/*.js"/>
			</fileset>
			<filterset>
				<filter value="${build.host}" token="BUILD_HOST" />
			</filterset>
		</copy>
	</target>

	<target name="package-theme">
		<basename file="${theme.loc}" property="theme.name" />
		<echo message="theme: ${theme.name} dir:${theme.loc}" />
		<zip destfile="${theme.target.loc}/${theme.name}.zip" basedir="${theme.loc}" />
	</target>

	<target name="compile" depends="process-sources, package-theme"
		description="Compile the project">

		<mxmlc file="${src.loc}/${project.app}" output="${bin.loc}/${project.swf}"
			link-report="${report.loc}/link-report.xml">

			<load-config filename="${FLEX_HOME}/frameworks/flex-config.xml" />
			<!-- <load-config filename="${flex.config.base}" /> -->
			<load-config filename="${config.file}" />

			<compiler.library-path dir="${lib.loc}"
				append="true">
				<include name="*.swc" />
			</compiler.library-path>

		</mxmlc>

		<xslt in="${report.loc}/link-report.xml" out="${report.loc}/link-report.html"
			style="res/link-report.xsl" />
	</target>

	<target name="test-compile"
		description="compile the test source code into the test destination directory"
		depends="process-sources">
		<!-- Compile Tests -->
		<mxmlc file="${test.loc}/${test.runner.app}" output="${bin.loc}/${test.runner.swf}">
			<load-config filename="${flex.config.base}" />
			<load-config filename="${test.config.file}" />

			<compiler.library-path dir="${lib.loc}"
				append="true">
				<include name="*.swc" />
			</compiler.library-path>

		</mxmlc>
	</target>

	<target name="test"
		description="run tests using a suitable unit testing framework."
		depends="test-compile">
		<!-- FlexUnit Config -->
		<taskdef resource="flexUnitTasks.tasks" classpath="${build.lib.loc}/flexUnitTasks-4.0.0.jar" />
		<flexunit swf="${bin.loc}/${test.runner.swf}" toDir="${report.flexunit.loc}"
			haltonfailure="false" verbose="true" localTrusted="true" />
	</target>

	<target name="test-flashplayer" description="runs tests using Flash Player"
		depends="test-compile">
		<exec executable="open" vmlauncher="true" spawn="false"
			failonerror="true">
			<arg line="-a '${flashplayer.app}'" />
			<arg line="${bin.loc}/${test.runner.swf}" />
		</exec>
	</target>

	<target name="build" description="Compiles the library" depends="clean, compile" />

</project>